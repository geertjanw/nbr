package org.netbeans.r.options;

import java.io.File;
import java.util.prefs.Preferences;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.openide.util.NbPreferences;

public final class RconfigurationPanel extends javax.swing.JPanel {

    private final RconfigurationOptionsPanelController controller;
    private  String R_LIBRARY_PATH = "RScriptPath";
    private final Preferences preferences = null;

    

   public RconfigurationPanel(RconfigurationOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
        // TODO listen to changes in form fields and call controller.changed()
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblPath = new javax.swing.JLabel();
        txtExecutablePath = new javax.swing.JTextField();
        buttonBrowse = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        buttonLibPath = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtLibPath = new javax.swing.JTextField();

        org.openide.awt.Mnemonics.setLocalizedText(lblPath, org.openide.util.NbBundle.getMessage(RconfigurationPanel.class, "RconfigurationPanel.lblPath.text")); // NOI18N

        txtExecutablePath.setText(org.openide.util.NbBundle.getMessage(RconfigurationPanel.class, "RconfigurationPanel.txtExecutablePath.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(buttonBrowse, org.openide.util.NbBundle.getMessage(RconfigurationPanel.class, "RconfigurationPanel.buttonBrowse.text")); // NOI18N
        buttonBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBrowseActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(RconfigurationPanel.class, "RconfigurationPanel.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(buttonLibPath, org.openide.util.NbBundle.getMessage(RconfigurationPanel.class, "RconfigurationPanel.buttonLibPath.text")); // NOI18N
        buttonLibPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLibPathActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 2, 11)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(RconfigurationPanel.class, "RconfigurationPanel.jLabel3.text")); // NOI18N

        txtLibPath.setText(org.openide.util.NbBundle.getMessage(RconfigurationPanel.class, "RconfigurationPanel.txtLibPath.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPath)
                                .addGap(2, 2, 2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtLibPath)
                            .addComponent(txtExecutablePath, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE))))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(buttonBrowse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonLibPath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPath)
                    .addComponent(txtExecutablePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonBrowse))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtLibPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonLibPath)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBrowseActionPerformed
        // TODO add your handling code here:
        String fileName = txtExecutablePath.getText();
        JFileChooser chooser = new JFileChooser(new File(fileName));
        int result = chooser.showOpenDialog(this);
        switch (result) {
            case JFileChooser.APPROVE_OPTION:
                File selectedFile = chooser.getSelectedFile();
                txtExecutablePath.setText(selectedFile.getAbsolutePath());
                controller.changed();
                break;
            case JFileChooser.CANCEL_OPTION:
                break;
            case JFileChooser.ERROR_OPTION:
                break;
        }
    }//GEN-LAST:event_buttonBrowseActionPerformed

    private void buttonLibPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLibPathActionPerformed
        // TODO add your handling code here:
        NbPreferences.forModule(this.getClass()).put("RConfiguration.libpath", txtLibPath.getText());
        JOptionPane.showMessageDialog(this, "Libraries paths registred");
        
    }//GEN-LAST:event_buttonLibPathActionPerformed

    void load() {
        // TODO read settings and initialize GUI
        // Example:        
        // someCheckBox.setSelected(Preferences.userNodeForPackage(RconfigurationPanel.class).getBoolean("someFlag", false));
        // or for org.openide.util with API spec. version >= 7.4:
        // someCheckBox.setSelected(NbPreferences.forModule(RconfigurationPanel.class).getBoolean("someFlag", false));
        // or:
        // someTextField.setText(SomeSystemOption.getDefault().getSomeStringProperty());
        txtLibPath.setText(NbPreferences.forModule(this.getClass()).get("RConfiguration.libpath", "R librairies path"));
        txtExecutablePath.setText(NbPreferences.forModule(this.getClass()).get("RConfiguration.path", "R executable path"));
    }

    void store() {
        // TODO store modified settings
        // Example:
        // Preferences.userNodeForPackage(RconfigurationPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or for org.openide.util with API spec. version >= 7.4:
        // NbPreferences.forModule(RconfigurationPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or:
        // SomeSystemOption.getDefault().setSomeStringProperty(someTextField.getText());
        NbPreferences.forModule(this.getClass()).put("RConfiguration.path", txtExecutablePath.getText());
    }

    boolean valid() {
        String path = txtExecutablePath.getText();
        return new File(path).exists();
    }

    public String getR_LIBRARY_PATH() {
        return NbPreferences.forModule(this.getClass()).get("RConfiguration.libpath", "R librairies path");
    }

    public void setR_LIBRARY_PATH(String R_LIBRARY_PATH) {
        this.R_LIBRARY_PATH = R_LIBRARY_PATH;
    }   
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBrowse;
    private javax.swing.JButton buttonLibPath;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblPath;
    private javax.swing.JTextField txtExecutablePath;
    private javax.swing.JTextField txtLibPath;
    // End of variables declaration//GEN-END:variables
}
